#!/usr/bin/env sh

set -e

get_remote_browser_url() {
  local remote_url=`git remote get-url origin`
  local remote_url_with_https=${remote_url/git@/"https://"}
  local remote_url_with_dashes=${remote_url_with_https/.com:/".com/"}
  local remote_url_without_git=${remote_url_with_dashes/.git/""}

  echo "$remote_url_without_git"
}

get_commit_between() {
  local remote_browser_url=`get_remote_browser_url`

  if (($#==2)); then
    if ! git rev-parse $2 >/dev/null 2>&1; then
      local current_commit_hash=`git log -1 --format="%H"`

      git log $1..$current_commit_hash --invert-grep --grep="Release v" --format="- %s - [%h]($remote_browser_url/commit/%H)" | cat
    else
      git log $1..$2 --invert-grep --grep="Release v" --format="- %s - [%h]($remote_browser_url/commit/%H)" | cat
    fi
  else
    if ! git rev-parse $1 >/dev/null 2>&1; then
      local current_commit_hash=`git log -1 --format="%H"`

      git log $current_commit_hash --invert-grep --grep="Release v" --format="- %s - [%h]($remote_browser_url/commit/%H)" | cat
    else
      git log $1 --invert-grep --grep="Release v" --format="- %s - [%h]($remote_browser_url/commit/%H)" | cat
    fi
  fi
}

get_tags_list() {
  local tmp=(`git tag`)
  local length=${#tmp[@]}

  if [ $# -gt 0 ]; then
    if git rev-parse $1 >/dev/null 2>&1; then
      for (( i=$length-1; i>=0; i-- )); do
        tag=${tmp[i]}

        if [[ "$tag" == "$1" ]]; then
          break;
        else
          unset tmp[$i]
        fi
      done
    else
      tmp+=("$1")
    fi
  fi

  printf '%s\n' "${tmp[@]}" | tac |  tr '\n' ' '; echo
}

print_tag() {
  if ! git rev-parse $1 >/dev/null 2>&1; then
    local current_tag_date=`date +"%Y-%m-%d"`

    echo "## $1 - $current_tag_date"
  else
    local current_tag_date=`git log -1 --format=%as $tag`

    echo "## $1 - $current_tag_date"
  fi
}

GIT_TAGS=(`get_tags_list $1`)
GIT_TAGS_LENGS=${#GIT_TAGS[@]}


echo "# Changelog"
echo

for i in "${!GIT_TAGS[@]}"; do
  tag=${GIT_TAGS[i]}
  last=$(($GIT_TAGS_LENGS-1))
  next=$(($i+1))


  print_tag $tag

  echo
  if [ "$i" -eq "$last" ]; then
    get_commit_between $tag
  else
    next_tag=${GIT_TAGS[$next]}
    get_commit_between $next_tag $tag

    echo
  fi
done
